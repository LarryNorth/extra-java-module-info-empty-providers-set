Reusing configuration cache.
> Task :app:clean UP-TO-DATE

> Task :app:moduleDescriptorRecommendations
module("com.opencsv:opencsv", "com.opencsv") {
    closeModule()
    requiresTransitive("java.sql")
    requiresTransitive("org.apache.commons.collections4")
    requires("java.xml")
    requires("org.apache.commons.lang3")
    requires("org.apache.commons.text")
    exports("com.opencsv")
    exports("com.opencsv.bean")
    exports("com.opencsv.bean.comparator")
    exports("com.opencsv.bean.concurrent")
    exports("com.opencsv.bean.customconverter")
    exports("com.opencsv.bean.exceptionhandler")
    exports("com.opencsv.bean.function")
    exports("com.opencsv.bean.processor")
    exports("com.opencsv.bean.util")
    exports("com.opencsv.bean.validators")
    exports("com.opencsv.enums")
    exports("com.opencsv.exceptions")
    exports("com.opencsv.processor")
    exports("com.opencsv.stream.reader")
    exports("com.opencsv.validators")
}
module("org.apache.commons:commons-collections4", "org.apache.commons.collections4") {
    closeModule()
    requiresTransitive("java.xml")
    exports("org.apache.commons.collections4")
    exports("org.apache.commons.collections4.bag")
    exports("org.apache.commons.collections4.bidimap")
    exports("org.apache.commons.collections4.collection")
    exports("org.apache.commons.collections4.comparators")
    exports("org.apache.commons.collections4.functors")
    exports("org.apache.commons.collections4.iterators")
    exports("org.apache.commons.collections4.keyvalue")
    exports("org.apache.commons.collections4.list")
    exports("org.apache.commons.collections4.map")
    exports("org.apache.commons.collections4.multimap")
    exports("org.apache.commons.collections4.multiset")
    exports("org.apache.commons.collections4.properties")
    exports("org.apache.commons.collections4.queue")
    exports("org.apache.commons.collections4.sequence")
    exports("org.apache.commons.collections4.set")
    exports("org.apache.commons.collections4.splitmap")
    exports("org.apache.commons.collections4.trie")
    exports("org.apache.commons.collections4.trie.analyzer")
}
module("org.liquibase:liquibase-core", "liquibase.core") {
    closeModule()
    requiresTransitive("java.desktop")
    requiresTransitive("java.logging")
    requiresTransitive("java.naming")
    requiresTransitive("java.sql")
    requiresTransitive("java.xml")
    requiresTransitive("java.xml.bind")
    requiresTransitive("org.apache.commons.io")
    requiresTransitive("org.apache.commons.text")
    requiresTransitive("org.yaml.snakeyaml")
    requires("com.opencsv")
    requires("org.apache.commons.collections4")
    requires("org.apache.commons.lang3")
    exports("liquibase")
    exports("liquibase.analytics")
    exports("liquibase.analytics.configuration")
    exports("liquibase.change")
    exports("liquibase.change.core")
    exports("liquibase.change.custom")
    exports("liquibase.change.visitor")
    exports("liquibase.changelog")
    exports("liquibase.changelog.column")
    exports("liquibase.changelog.filter")
    exports("liquibase.changelog.visitor")
    exports("liquibase.changeset")
    exports("liquibase.command")
    exports("liquibase.command.copy")
    exports("liquibase.command.core")
    exports("liquibase.command.core.helpers")
    exports("liquibase.command.core.init")
    exports("liquibase.command.providers")
    exports("liquibase.common.datatype")
    exports("liquibase.configuration")
    exports("liquibase.configuration.core")
    exports("liquibase.database")
    exports("liquibase.database.core")
    exports("liquibase.database.jvm")
    exports("liquibase.datatype")
    exports("liquibase.datatype.core")
    exports("liquibase.dbdoc")
    exports("liquibase.diff")
    exports("liquibase.diff.compare")
    exports("liquibase.diff.compare.core")
    exports("liquibase.diff.core")
    exports("liquibase.diff.output")
    exports("liquibase.diff.output.changelog")
    exports("liquibase.diff.output.changelog.core")
    exports("liquibase.diff.output.report")
    exports("liquibase.exception")
    exports("liquibase.executor")
    exports("liquibase.executor.jvm")
    exports("liquibase.integration")
    exports("liquibase.integration.ant")
    exports("liquibase.integration.ant.type")
    exports("liquibase.integration.commandline")
    exports("liquibase.integration.commandline.util")
    exports("liquibase.integration.servlet")
    exports("liquibase.integration.spring")
    exports("liquibase.io")
    exports("liquibase.license")
    exports("liquibase.listener")
    exports("liquibase.lockservice")
    exports("liquibase.logging")
    exports("liquibase.logging.core")
    exports("liquibase.logging.mdc")
    exports("liquibase.logging.mdc.customobjects")
    exports("liquibase.osgi")
    exports("liquibase.parser")
    exports("liquibase.parser.core")
    exports("liquibase.parser.core.formattedsql")
    exports("liquibase.parser.core.json")
    exports("liquibase.parser.core.sql")
    exports("liquibase.parser.core.xml")
    exports("liquibase.parser.core.yaml")
    exports("liquibase.plugin")
    exports("liquibase.precondition")
    exports("liquibase.precondition.core")
    exports("liquibase.report")
    exports("liquibase.resource")
    exports("liquibase.sdk.exception")
    exports("liquibase.sdk.executor")
    exports("liquibase.sdk.resource")
    exports("liquibase.sdk.supplier.resource")
    exports("liquibase.serializer")
    exports("liquibase.serializer.core.formattedsql")
    exports("liquibase.serializer.core.json")
    exports("liquibase.serializer.core.string")
    exports("liquibase.serializer.core.xml")
    exports("liquibase.serializer.core.yaml")
    exports("liquibase.servicelocator")
    exports("liquibase.snapshot")
    exports("liquibase.snapshot.jvm")
    exports("liquibase.sql")
    exports("liquibase.sql.visitor")
    exports("liquibase.sqlgenerator")
    exports("liquibase.sqlgenerator.core")
    exports("liquibase.statement")
    exports("liquibase.statement.core")
    exports("liquibase.structure")
    exports("liquibase.structure.core")
    exports("liquibase.ui")
    exports("liquibase.util")
    exports("liquibase.util.csv")
    exports("liquibase.util.file")
    exports("liquibase.util.grammar")
    exports("liquibase.util.xml")
    // ignoreServiceProvider("liquibase.analytics.AnalyticsListener")
    // ignoreServiceProvider("liquibase.analytics.configuration.AnalyticsConfiguration")
    // ignoreServiceProvider("liquibase.change.Change")
    // ignoreServiceProvider("liquibase.changelog.ChangeLogHistoryService")
    // ignoreServiceProvider("liquibase.changelog.visitor.ValidatingVisitorGenerator")
    // ignoreServiceProvider("liquibase.changeset.ChangeSetService")
    // ignoreServiceProvider("liquibase.command.CommandStep")
    // ignoreServiceProvider("liquibase.command.LiquibaseCommand")
    // ignoreServiceProvider("liquibase.command.copy.ProjectCopier")
    // ignoreServiceProvider("liquibase.configuration.AutoloadedConfigurations")
    // ignoreServiceProvider("liquibase.configuration.ConfigurationValueProvider")
    // ignoreServiceProvider("liquibase.database.Database")
    // ignoreServiceProvider("liquibase.database.DatabaseConnection")
    // ignoreServiceProvider("liquibase.database.LiquibaseTableNames")
    // ignoreServiceProvider("liquibase.database.jvm.ConnectionPatterns")
    // ignoreServiceProvider("liquibase.datatype.LiquibaseDataType")
    // ignoreServiceProvider("liquibase.diff.DiffGenerator")
    // ignoreServiceProvider("liquibase.diff.compare.DatabaseObjectComparator")
    // ignoreServiceProvider("liquibase.diff.output.changelog.ChangeGenerator")
    // ignoreServiceProvider("liquibase.executor.Executor")
    // ignoreServiceProvider("liquibase.io.OutputFileHandler")
    // ignoreServiceProvider("liquibase.lockservice.LockService")
    // ignoreServiceProvider("liquibase.logging.LogService")
    // ignoreServiceProvider("liquibase.logging.mdc.CustomMdcObject")
    // ignoreServiceProvider("liquibase.logging.mdc.MdcManager")
    // ignoreServiceProvider("liquibase.parser.ChangeLogParser")
    // ignoreServiceProvider("liquibase.parser.LiquibaseSqlParser")
    // ignoreServiceProvider("liquibase.parser.NamespaceDetails")
    // ignoreServiceProvider("liquibase.parser.SnapshotParser")
    // ignoreServiceProvider("liquibase.precondition.Precondition")
    // ignoreServiceProvider("liquibase.report.ShowSummaryGenerator")
    // ignoreServiceProvider("liquibase.resource.PathHandler")
    // ignoreServiceProvider("liquibase.serializer.ChangeLogSerializer")
    // ignoreServiceProvider("liquibase.serializer.SnapshotSerializer")
    // ignoreServiceProvider("liquibase.servicelocator.ServiceLocator")
    // ignoreServiceProvider("liquibase.snapshot.SnapshotGenerator")
    // ignoreServiceProvider("liquibase.sqlgenerator.SqlGenerator")
    // ignoreServiceProvider("liquibase.structure.DatabaseObject")
}

BUILD SUCCESSFUL in 1s
2 actionable tasks: 1 executed, 1 up-to-date
Configuration cache entry reused.
